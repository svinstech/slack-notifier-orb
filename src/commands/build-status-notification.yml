description: >
  This command exists as a convenience. It invokes the send-slack-message command to send the build status. The user need only specify the recipient(s) via their webhooks, although other aspects of the message are still customizable.

parameters:
  channelWebhookEnvironmentVariables:
    type: string
    description: The environment variables that contain the webhooks for the channels to which the message will be sent. (space-delimited)
  header:
    default: "TEST RESULTS"
    type: string
    description: A header for the message to be sent.
  notify-on-success:
    default: false
    type: boolean
    description: Whether to send a notification when the build succeeds.
  pass-text:
    default: "SUCCESS :checkmark:"
    type: string
    description: This will be displayed as the build status when the build succeeds.
  fail-text:
    default: "FAILURE :x:"
    type: string
    description: This will be displayed as the build status when the build fails.
  additional-text:
    default: ""
    type: string
    description: This text will follow the build status on a new line.
steps:
  - run:
      name: Process successful build
      command: |
        echo 'export BUILD_STATUS="<<parameters.pass-text>>"'>>$BASH_ENV
      when: on_success
  - run:
      name: Process build failure
      command: |
        echo 'export BUILD_STATUS="<<parameters.fail-text>>"'>>$BASH_ENV
      when: on_fail
  - run:
      name: Set the 'WHEN' variable
      command: <<include("scripts/notify_on_failure.sh \<< parameters.notify-on-success \>>")>>
      when: always
  - run:
      name: test
      command: |
        echo "! PARAMETERS START !"
        echo $WHEN
  - send-slack-message:
      when: $WHEN
      header: <<parameters.header>>
      message: "Build status: ${BUILD_STATUS}\n<<parameters.additional-text>>"
      channelWebhookEnvironmentVariables: <<parameters.channelWebhookEnvironmentVariables>>
